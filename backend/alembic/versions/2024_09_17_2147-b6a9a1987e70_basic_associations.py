"""basic associations

Revision ID: b6a9a1987e70
Revises: 7563411dee2d
Create Date: 2024-09-17 21:47:00.471364

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "b6a9a1987e70"
down_revision: Union[str, None] = "7563411dee2d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "classrooms",
        sa.Column("best_task_type", sa.Integer(), nullable=True),
        sa.Column("best_task_percent", sa.Integer(), nullable=True),
        sa.Column("worst_task_type", sa.Integer(), nullable=True),
        sa.Column("worst_task_percent", sa.Integer(), nullable=True),
        sa.Column("teacher_id", sa.Uuid(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["teacher_id"],
            ["teachers.id"],
            name=op.f("fk_classrooms_teacher_id_teachers"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_classrooms")),
    )
    op.create_table(
        "student_variant_association",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("student_id", sa.Uuid(), nullable=True),
        sa.Column("variant_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["students.id"],
            name=op.f("fk_student_variant_association_student_id_students"),
        ),
        sa.ForeignKeyConstraint(
            ["variant_id"],
            ["variants.id"],
            name=op.f("fk_student_variant_association_variant_id_variants"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_student_variant_association")),
        sa.UniqueConstraint(
            "student_id", "variant_id", name="idx_unique_student_variant"
        ),
    )
    op.create_table(
        "variant_task_association",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("variant_id", sa.Uuid(), nullable=True),
        sa.Column("task_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["tasks.id"],
            name=op.f("fk_variant_task_association_task_id_tasks"),
        ),
        sa.ForeignKeyConstraint(
            ["variant_id"],
            ["variants.id"],
            name=op.f("fk_variant_task_association_variant_id_variants"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_variant_task_association")),
        sa.UniqueConstraint("variant_id", "task_id", name="idx_unique_variant_task"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("variant_task_association")
    op.drop_table("student_variant_association")
    op.drop_table("classrooms")
    # ### end Alembic commands ###
